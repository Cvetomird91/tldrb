#!/usr/bin/env ruby

require 'bales'
require 'open-uri'

module Tldrb; end

module Tldrb::Functions
  def get_page(query, platform)
    url = "https://raw.github.com/tldr-pages/tldr/master/pages/" \
          "#{platform}/#{query}.md"
    open(url).read
  rescue StandardError
    nil
  end

  def my_platform
    platform = Gem::Platform.local.os
    # TODO: suggest upstream use of "darwin" instead of "osx", since
    # "darwin" is what is actually used by OS X internally"
    platform = 'osx' if platform == 'darwin'
    return platform
  end

  def supported_platforms
    # TODO: check for supported platforms dynamically
    ['linux', 'osx', 'sunos']
  end
end

class Tldrb::Application < Bales::Application
  version "0.0.3"
  summary "tldr client in Ruby"
  description "Ruby client for tldr " \
              "(<https://github.com/tldr-pages/tldr>).  Implemented with " \
              "the Ruby on Bales command-line app framework " \
              "(<https://github.com/YellowApple/bales>)."

  # TODO: implement opt value checking in Bales
  option :platform,
         short_form: '-o',
         long_form: '--os',
         type: String,
         description: "Override the operating system [linux, osx, sunos]"

  action do |query, platform: nil|
    unless query.class == String
      Tldrb::Command::Help.run
      return
    end
    extend Tldrb::Functions

    platform = my_platform if platform.nil?

    result = get_page query, platform
    result = get_page query, 'common' if result.nil?

    if result.nil?
      puts "Couldn't find a tldr for '#{query}'."
    else
      # TODO: markdown formatting
      puts result
    end
  end

  # TODO: implement this in Bales
  command "version" do
    action do
      puts Tldrb::Application::VERSION
    end
  end

  parse_and_run
end
